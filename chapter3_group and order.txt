USE test;
SHOW TABLES;

DROP TABLE IF EXISTS Shohin;
CREATE TABLE 
  Shohin(
  shohin_id   CHAR(4)   NOT NULL  COMMENT '商品编号',
  shohin_mei  VARCHAR(100) NOT NULL COMMENT '商品名称',
  shohin_bunrui VARCHAR(32) NOT NULL COMMENT '商品分类',
  hanbai_tanka  INTEGER COMMENT '销售单价',
  shiire_tanka  INTEGER COMMENT '进货单价',
  torokubi   DATE COMMENT '登记日期',
  PRIMARY KEY (shohin_id));

INSERT INTO 
  Shohin
VALUES
  ('0001','T恤衫','衣服',1000,500,'2009-09-20'),
  ('0002','打孔器','办公用品',500,320,'2009-09-11'),
  ('0003','运动T恤','衣服',4000,2800,NULL),
  ('0004','菜刀','厨房用具',3000,2800,'2009-09-20'),
  ('0005','高压锅','厨房用具',6800,5000,'2009-01-15'),
  ('0006','叉子','厨房用具',500,NULL,'2009-09-20'),
  ('0007','擦菜板','厨房用具',880,790,'2008-04-28'),
  ('0008','圆珠笔','办公用品',100,NULL,'2009-11-11');

#修改表名称
RENAME TABLE
  Shohin
TO
  Sohin;
RENAME TABLE
  Sohin
TO 
  Shohin;

#设定汉语别名（注：汉语名字用双引号引起）
SELECT
  shohin_id    AS "商品编号",
  shohin_mei   AS "商品名称",
  shiire_tanka AS "进货单价"
FROM
  Shohin;
/*
+----------+----------+----------+
| 商品编号 | 商品名称 | 进货单价 |
+----------+----------+----------+
| 0001     | T恤衫    |      500 |
| 0002     | 打孔器   |      320 |
| 0003     | 运动T恤  |     2800 |
| 0004     | 菜刀     |     2800 |
| 0005     | 高压锅   |     5000 |
| 0006     | 叉子     | NULL     |
| 0007     | 擦菜板   |      790 |
| 0008     | 圆珠笔   | NULL     |
+----------+----------+----------+
8 rows in set
*/

#查询常数（显示常数）
SELECT
  '商品' AS mojiretau, 38 AS kazu, '2009-02-24' AS hizuke, shohin_id, shohin_mei
FROM 
  Shohin;
/*
+-----------+------+------------+-----------+------------+
| mojiretau | kazu | hizuke     | shohin_id | shohin_mei |
+-----------+------+------------+-----------+------------+
| 商品      |   38 | 2009-02-24 | 0001      | T恤衫      |
| 商品      |   38 | 2009-02-24 | 0002      | 打孔器     |
| 商品      |   38 | 2009-02-24 | 0003      | 运动T恤    |
| 商品      |   38 | 2009-02-24 | 0004      | 菜刀       |
| 商品      |   38 | 2009-02-24 | 0005      | 高压锅     |
| 商品      |   38 | 2009-02-24 | 0006      | 叉子       |
| 商品      |   38 | 2009-02-24 | 0007      | 擦菜板     |
| 商品      |   38 | 2009-02-24 | 0008      | 圆珠笔     |
+-----------+------+------------+-----------+------------+
8 rows in set
*/

#查询字段并删除重复内容（原值为null的被归于一类，即只显示一个null值）
SELECT DISTINCT
  shohin_bunrui
FROM
  Shohin;
/*
+---------------+
| shohin_bunrui |
+---------------+
| 衣服          |
| 办公用品      |
| 厨房用具      |
+---------------+
3 rows in set
*/
#也可以用于多列
SELECT DISTINCT
  shohin_bunrui, torokubi
FROM
  Shohin;
/*
+---------------+------------+
| shohin_bunrui | torokubi   |
+---------------+------------+
| 衣服          | 2009-09-20 |
| 办公用品      | 2009-09-11 |
| 衣服          | NULL       |
| 厨房用具      | 2009-09-20 |
| 厨房用具      | 2009-01-15 |
| 厨房用具      | 2008-04-28 |
| 办公用品      | 2009-11-11 |
+---------------+------------+
7 rows in set
*/

#算术运算符(+, -, *, /, 括号优先)
SELECT
  shohin_mei, hanbai_tanka, hanbai_tanka * 2 AS 'hanbai_tanka_x2'
FROM
  Shohin;
/*
+------------+--------------+-----------------+
| shohin_mei | hanbai_tanka | hanbai_tanka_x2 |
+------------+--------------+-----------------+
| T恤衫      |         1000 |            2000 |
| 打孔器     |          500 |            1000 |
| 运动T恤    |         4000 |            8000 |
| 菜刀       |         3000 |            6000 |
| 高压锅     |         6800 |           13600 |
| 叉子       |          500 |            1000 |
| 擦菜板     |          880 |            1760 |
| 圆珠笔     |          100 |             200 |
+------------+--------------+-----------------+
8 rows in set
*/

#比较运算符(<>不等于)

#字符串的比较
CREATE TABLE
  Chars( chr CHAR(3) NOT NULL,
  PRIMARY KEY (chr));
INSERT INTO
  Chars 
VALUES
  ('1'),('2'),('3'),('10'),('11'),('222');
SELECT
  *
FROM
  Chars 
WHERE
  chr > '2';
/*
+-----+
| chr |
+-----+
| 222 |
| 3   |
+-----+
2 rows in set
*/
/*
针对以上字符串，按照字典顺序进行排序的结果为：
1,10,11,2,222,3
因此，在选取比2“大”的字符串时，只有222和3这两个结果。
*/

#不能对null使用比较运算符
#当条件为不等于某值时，null值是选择不出来的，需要单独使用is null和is not null来作为选择条件。
  
#逻辑运算符

#NOT
SELECT 
  shohin_mei, shohin_bunrui, hanbai_tanka
FROM
  Shohin
WHERE NOT
  hanbai_tanka>=1000;
/*
+------------+---------------+--------------+
| shohin_mei | shohin_bunrui | hanbai_tanka |
+------------+---------------+--------------+
| 打孔器     | 办公用品      |          500 |
| 叉子       | 厨房用具      |          500 |
| 擦菜板     | 厨房用具      |          880 |
| 圆珠笔     | 办公用品      |          100 |
+------------+---------------+--------------+
4 rows in set
*/

#sql中的逻辑运算被称为三值逻辑，包含真、假、不确定

#条件中含运算符
SELECT
  shohin_mei, hanbai_tanka, shiire_tanka
FROM
  Shohin
WHERE
  hanbai_tanka - shiire_tanka >=500;
/*
+------------+--------------+--------------+
| shohin_mei | hanbai_tanka | shiire_tanka |
+------------+--------------+--------------+
| T恤衫      |         1000 |          500 |
| 运动T恤    |         4000 |         2800 |
| 高压锅     |         6800 |         5000 |
+------------+--------------+--------------+
3 rows in set
*/

#“销售单价打九折之后利润高于100日元的办公用品和厨房用具”
SELECT
  shohin_mei, shohin_bunrui, hanbai_tanka * 0.9 - shiire_tanka as rieki
FROM
  Shohin
WHERE
  (shohin_bunrui = '办公用品' OR shohin_bunrui = '厨房用具')
AND
  hanbai_tanka * 0.9 - shiire_tanka > 100;
/*
+------------+---------------+-------+
| shohin_mei | shohin_bunrui | rieki |
+------------+---------------+-------+
| 打孔器     | 办公用品      | 130   |
| 高压锅     | 厨房用具      | 1120  |
+------------+---------------+-------+
2 rows in set
*/

#聚合函数：count、sum、avg、max、min
#对某一列求行数时，null值是不包括的
#对某一列求和时，null值会先被剔除
#max和min函数适用于几乎所有数据类型的列
#只有select、having、order by子句中能够使用聚合函数

#计算去除重复数据后的数据行数
SELECT
  COUNT(DISTINCT shohin_bunrui)
FROM
  Shohin;
/*
+-------------------------------+
| COUNT(DISTINCT shohin_bunrui) |
+-------------------------------+
|                             3 |
+-------------------------------+
1 row in set
*/

#group by子句的聚合结果是无序的
#子句的书写顺序：select->from->where->group by->having->order by
#系统的执行顺序：from->where->group by->having->select->order by(可以使用别名)

#使用group by子句时，select子句中不能出现聚合键之外的列名
#错例：
SELECT
  shohin_mei, shiire_tanka, COUNT(*)
FROM
  Shohin
GROUP BY
  shiire_tanka;
/*
1055 - Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.Shohin.shohin_mei' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
*/

#对商品种类进行聚合分组后，取出“包含数据行数为2行”的组
SELECT
  shohin_bunrui, COUNT(*)
FROM
  Shohin
GROUP BY
  shohin_bunrui
HAVING
  COUNT(*) = 2;
/*
+---------------+----------+
| shohin_bunrui | COUNT(*) |
+---------------+----------+
| 衣服          |        2 |
| 办公用品      |        2 |
+---------------+----------+
2 rows in set
*/

#where子句=指定行所对应的条件
#having子句=指定组所对应的条件

#对多列进行排序
SELECT
  shohin_id, shohin_mei, hanbai_tanka, shiire_tanka
FROM
  Shohin
ORDER BY
  hanbai_tanka, shohin_id;
/*
+-----------+------------+--------------+--------------+
| shohin_id | shohin_mei | hanbai_tanka | shiire_tanka |
+-----------+------------+--------------+--------------+
| 0008      | 圆珠笔     |          100 | NULL         |
| 0002      | 打孔器     |          500 |          320 |
| 0006      | 叉子       |          500 | NULL         |
| 0007      | 擦菜板     |          880 |          790 |
| 0001      | T恤衫      |         1000 |          500 |
| 0004      | 菜刀       |         3000 |         2800 |
| 0003      | 运动T恤    |         4000 |         2800 |
| 0005      | 高压锅     |         6800 |         5000 |
+-----------+------------+--------------+--------------+
8 rows in set
*/

#order by子句可以使用存在于表中、但不包含在selec子句中的列
SELECT
  shohin_mei, hanbai_tanka, shiire_tanka
FROM
  Shohin
ORDER BY
  shohin_id;
/*
+------------+--------------+--------------+
| shohin_mei | hanbai_tanka | shiire_tanka |
+------------+--------------+--------------+
| T恤衫      |         1000 |          500 |
| 打孔器     |          500 |          320 |
| 运动T恤    |         4000 |         2800 |
| 菜刀       |         3000 |         2800 |
| 高压锅     |         6800 |         5000 |
| 叉子       |          500 | NULL         |
| 擦菜板     |          880 |          790 |
| 圆珠笔     |          100 | NULL         |
+------------+--------------+--------------+
8 rows in set
*/

#练习

#1.求销售单价合计值是进货单价合计值1.5倍的商品种类

SELECT
  shohin_bunrui, sum(hanbai_tanka), SUM(shiire_tanka)
FROM
  Shohin
GROUP BY
  shohin_bunrui
HAVING
  SUM(hanbai_tanka)/SUM(shiire_tanka) >= 1.5;
/*
+---------------+-------------------+-------------------+
| shohin_bunrui | sum(hanbai_tanka) | SUM(shiire_tanka) |
+---------------+-------------------+-------------------+
| 衣服          | 5000              | 3300              |
| 办公用品      | 600               | 320               |
+---------------+-------------------+-------------------+
2 rows in set
*/
